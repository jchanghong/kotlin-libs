/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin library project to get you started.
 */
import name.remal.gradle_plugins.dsl.extensions.*
plugins {
    kotlin("jvm")
    kotlin("plugin.jpa")
    kotlin("plugin.spring")
    id("org.jetbrains.dokka")
    `java-library`
    signing
    `maven-publish`
    id("name.remal.maven-publish-nexus-staging") version "1.0.211"
}
publishing {
    publications {
        create<MavenPublication>("maven") {
            from(components["java"])
            groupId="com.github.jchanghong"
            version="1.0.1"
            artifactId="kotlin-lib"
            pom {
                name.set("kotlin-lib")
                description.set("kotlin java tools")
                url.set("http://www.example.com/library")
                licenses {
                    license {
                        name.set("The Apache License, Version 2.0")
                        url.set("http://www.apache.org/licenses/LICENSE-2.0.txt")
                    }
                }
                developers {
                    developer {
                        email.set("3200601e@qq.com")
                    }
                }
                scm {
                    connection.set("scm:git:https://github.com/jchanghong/utils.git")
                    developerConnection.set("scm:git:git@github.com:jchanghong/utils.git")
                    url.set("git@github.com:jchanghong/utils.git")
                }
            }
        }
    }
    repositories {
        maven {
            name="sona"
			val releasesRepoUrl = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2")
            val snapshotsRepoUrl = uri("$buildDir/repos/snapshots")
//            val releasesRepoUrl = uri("$buildDir/repos/releases")

            url = if (version.toString().endsWith("SNAPSHOT")) snapshotsRepoUrl else releasesRepoUrl
            if (url.toString().startsWith("http")) {
                this.isAllowInsecureProtocol=true
                this.credentials {
                    this.username="jchanghong"
                    this.password="!b58r5gsHu*0"
                }
            }
        }
    }
}
signing {

    sign(publishing.publications["maven"])
}
dependencies {

}
kotlin{
    sourceSets {
        val test by getting {
            dependencies {
                implementation(kotlin("test-junit"))
            }
        }
        val main by getting {
            dependencies {
                api("org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.3.9")
                api("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9")

                api("io.springfox:springfox-swagger2:2.9.2")
                api("io.springfox:springfox-swagger-ui:2.9.2")
                api("com.squareup.okhttp3:okhttp:4.8.1")
                api("com.baomidou:mybatis-plus-boot-starter:3.4.0")
                api("com.github.liaochong:myexcel:3.9.4")
                api("cn.hutool:hutool-all:5.4.1")
                api("com.oracle.ojdbc:ojdbc8:19.3.0.0")
                api("com.oracle.ojdbc:orai18n:19.3.0.0")
                api("mysql:mysql-connector-java:8.0.21")
                api("org.mariadb.jdbc:mariadb-java-client:2.6.2")
                api("org.postgresql:postgresql:42.2.14")
                implementation("org.springframework.boot:spring-boot-starter-data-redis:2.3.3.RELEASE")
                implementation("org.springframework.boot:spring-boot-starter-web:2.3.3.RELEASE")
                api("com.fasterxml.jackson.module:jackson-module-kotlin:2.11.2")
                api("com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.2")
                api("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.2")
                api("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.2")
                implementation("org.springframework.kafka:spring-kafka:2.5.5.RELEASE")
            }
        }
    }
}
java{
    withJavadocJar()
    withSourcesJar()
}
tasks.javadoc {
    if (JavaVersion.current().isJava9Compatible) {
        (options as StandardJavadocDocletOptions).addBooleanOption("html5", true)
    }
}
tasks.named("releaseNexusRepositories"){
    this.dependsOn("publish")
}